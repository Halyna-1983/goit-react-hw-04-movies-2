{"version":3,"sources":["services/movies-Api.js","views/MoviePreview/MoviePreview.js","component/MoviesList/MoviesList.js","component/SearchForm/SearchForm.js","views/SearchView/SearchView.js"],"names":["API_KEY","BASE_URL","fetchMovies","a","Axios","get","response","data","results","fetchById","id","fetchCast","cast","fetchReviews","searchMovies","query","MoviePreview","title","name","withRouter","movies","location","map","poster_path","to","pathname","state","from","SearchForm","querry","handleChange","e","setState","target","value","trim","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","Component","SearchView","searchQuery","onChangeQuery","history","push","search","fetchMovie","Api","prevProps","prevState","MoviesList"],"mappings":"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","file":"static/js/search-view.09e1f2f8.chunk.js","sourcesContent":["// import { computeHeadingLevel } from '@testing-library/react';\r\nimport Axios from 'axios';\r\n\r\nconst API_KEY = '22dbeccf11c596f9a21f43b1ed86f3d0';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchMovies = async () => {\r\n    const response = await Axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`)\r\n    return response.data.results;\r\n}\r\n\r\nconst fetchById = async (id) => {\r\n\tconst response = await Axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`)\r\n\treturn response.data;\r\n}\r\n\r\nconst fetchCast = async (id) => {\r\n\tconst response = await Axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`)\r\n   \treturn response.data.cast;\r\n}\r\n\r\nconst fetchReviews = async (id) => {\r\n\tconst response = await Axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`)\r\n    return response.data.results;\r\n}\r\n\r\nconst searchMovies = async (query) => {\r\n\tconst response = await Axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\r\n\treturn response.data.results;\r\n}\r\n// eslint-disable-next-line\r\nexport default {fetchMovies, fetchById, fetchCast, fetchReviews, searchMovies};","import React from \"react\";\r\n\r\nconst MoviePreview = ({title, name}) => {\r\n    return ( \r\n        <div>\r\n            {/* <img src=\"\" alt=\"\" /> */}\r\n            {/* <h4>{title || name}</h4> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default MoviePreview;","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport MoviePreview from \"../../views/MoviePreview\";\r\n\r\nconst MoviesList = ({movies, location}) => {\r\n    return (  \r\n        <ul>\r\n            {\r\n                movies.map(({id, title, name, poster_path}) => (\r\n                    <li key={id}>\r\n                        <NavLink to={{pathname: `/movies/${id}`,\r\n                        state: {\r\n                            from: location,\r\n                        }}}>\r\n                            <MoviePreview title={title} name={name} poster_path={poster_path} />\r\n                            {title || name}\r\n                        </NavLink>\r\n                        \r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n \r\nexport default withRouter(MoviesList);","import React, { Component } from 'react';\r\n\r\nclass SearchForm extends Component {\r\n    state = { \r\n        querry: '',\r\n     }\r\n\r\n     handleChange = e => {\r\n         this.setState({ query: e.target.value.trim() });\r\n     }\r\n\r\n     handleSubmit = e => {\r\n         e.preventDefault()\r\n         this.props.onSubmit(this.state.query)\r\n     }\r\n\r\n    render() { \r\n        return ( \r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" value={this.state.query} onChange={this.handleChange} />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SearchForm;","import React, { Component } from 'react';\r\nimport SearchForm from \"../../component/SearchForm\";\r\nimport Api from \"../../services/movies-Api\";\r\nimport MoviesList from \"../../component/MoviesList\";\r\n\r\n\r\nclass SearchView extends Component {\r\n    state = { \r\n        searchQuery: '',\r\n        movies: [],\r\n     }\r\n\r\n     componentDidMount() {\r\n         if (this.props.location?.state?.searchQuery) {\r\n             this.setState({ searchQuery: this.props.location?.state?.searchQuery });\r\n         }\r\n     }\r\n\r\n     componentDidUpdate(prevProps, prevState) {\r\n         if (prevState.searchQuery !== this.state.searchQuery) {\r\n             this.fetchMovie();\r\n         }\r\n     }\r\n\r\n     onChangeQuery = query => {\r\n     this.setState({ searchQuery: query });\r\n\r\n     this.props.history.push({\r\n         pathname: this.props.location.search,\r\n         search: `query=${query}`,\r\n         state: {searchQuery: query},\r\n    });\r\n    };\r\n\r\n     fetchMovie = async() => {\r\n         const movies = await Api.searchMovies(this.state.searchQuery)\r\n         this.setState({ movies });\r\n     }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1> Search movies</h1>\r\n                <SearchForm onSubmit={this.onChangeQuery}/>\r\n                <MoviesList movies={this.state.movies}/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SearchView;"],"sourceRoot":""}